#!/usr/bin/env nu

use modules/database.nu *
use modules/general.nu *

# Your own novel list in simple script!
#
# Add, view, edit and remove your novels within local database.
# Database file is located at "~/.local/share/novelist/novels.db"
def main [] {
  help main
}

# list novels in database
def "main show" [category: string = "all"] {
  load-database

  let list = if $category == "all" {
    stor open | query db "SELECT * FROM novels"
  } else {
    stor open | query db "SELECT title, chapters FROM novels WHERE category LIKE ?" -p [$category]
  }

  print $list
}

# add novel to the database
def "main add" [title? chapters? category?] {
  load-database

  let title = if ($title | is-not-empty) {$title} else { input "Plese enter novel title: " }
  let chapters = if ($chapters | is-not-empty) {$chapters} else { input "Chapters: " }
  let category = if ($category | is-not-empty) {$category} else { input "Category: " }
  stor insert -t novels -d {title: $title, chapters: $chapters, category: $category}

  save-database
}

# list categories
def "main categories" [] {
  load-database

  stor open | query db "SELECT DISTINCT category FROM novels" | print $in
}


# edit title in database
def "main edit" [] {
  load-database

  let title = search-novel-title

  let new_title = input "New title(leave empty to skip): "
  let new_chapters = input "Update chapters: "
  let new_category = input "Update category: "

  if ($new_chapters | is-not-empty) {
    stor update -t novels -u {chapters: $new_chapters} -w $"title LIKE '($title)'"
  }

  if ($new_category | is-not-empty) {
    stor update -t novels -u {category: $new_category} -w $"title LIKE '($title)'"
  }

  if ($new_title | is-not-empty) {
    stor update -t novels -u {title: $new_title} -w $"title LIKE '($title)'"
  }

  print "Updated record:"
  stor open |
    query db "SELECT * FROM novels WHERE title LIKE ? OR title LIKE ?" -p [$title $new_title] |
    print $in

  save-database
}

# remove title from database
def "main remove" [] {
  load-database

  let title = search-novel-title

  stor delete -t novels -w $"title LIKE '($title)'"
  print $"Deleted \"($title)\""

  save-database
}
